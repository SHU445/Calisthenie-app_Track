/**
 * Script pour v√©rifier que les tables NextAuth existent
 */

const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function verifyNextAuthTables() {
  console.log('üîç V√©rification des tables NextAuth...\n');

  try {
    await prisma.$connect();
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie\n');

    // V√©rifier chaque table individuellement
    console.log('1. V√©rification de la table accounts...');
    try {
      const accountCount = await prisma.account.count();
      console.log(`‚úÖ Table accounts existe (${accountCount} enregistrements)`);
    } catch (error) {
      console.log('‚ùå Table accounts n\'existe pas:', error.message);
    }

    console.log('\n2. V√©rification de la table sessions...');
    try {
      const sessionCount = await prisma.session.count();
      console.log(`‚úÖ Table sessions existe (${sessionCount} enregistrements)`);
    } catch (error) {
      console.log('‚ùå Table sessions n\'existe pas:', error.message);
    }

    console.log('\n3. V√©rification de la table verification_tokens...');
    try {
      const tokenCount = await prisma.verificationToken.count();
      console.log(`‚úÖ Table verification_tokens existe (${tokenCount} enregistrements)`);
    } catch (error) {
      console.log('‚ùå Table verification_tokens n\'existe pas:', error.message);
    }

    console.log('\n4. Test de cr√©ation d\'une session...');
    try {
      // Cr√©er une session de test
      const testSession = await prisma.session.create({
        data: {
          sessionToken: 'test-session-token-' + Date.now(),
          userId: 'cmgc423re0000uq9w9we9jpz3', // ID de l'utilisateur demo
          expires: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 jours
        }
      });
      console.log('‚úÖ Session de test cr√©√©e:', testSession.id);

      // Supprimer la session de test
      await prisma.session.delete({
        where: { id: testSession.id }
      });
      console.log('‚úÖ Session de test supprim√©e');
    } catch (error) {
      console.log('‚ùå Erreur lors du test de session:', error.message);
    }

    console.log('\nüéâ V√©rification termin√©e !');
    console.log('');
    console.log('üìù NextAuth.js est configur√© et pr√™t √† utiliser !');
    console.log('   - Les sessions seront persist√©es dans la base de donn√©es');
    console.log('   - La dur√©e de vie des sessions est de 30 jours');
    console.log('   - Les cookies sont s√©curis√©s en production');

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter la v√©rification
verifyNextAuthTables();
